（下文中的「昨天」特指 2019 年 6 月 17 日，做笔记的时间是 2019 年 6 月 18 日）
（因为昨天看了 235 页的代码大全，并且看完了，内容很多印象比较深）

4:20 - 5:00
「game 只是提供底层机制的一个对象，那游戏结束的画面和游戏开始的画面和游戏的标题画面还有....画面。它们每个画面是不一样的，每个完整的画面里面都可以画很多很多个东西，但是每个完整的画面都是独立的，你可以把它想象成一个独立的东西。我们每时每刻这个 game 的 draw 只会去 draw 它当时被激活的场景，所以我们是实际上需要一个中间层」
这里出现的「底层」和「中间层」想起昨天看代码大全里 29.3 「增量集成策略」里介绍的各种策略

6:50
萧大写的 scene.js 这个文件里的类名直接就是 Scene 也跟代码大全提倡的一样
比如 P771 - P772 的「文件和程序布局」这一小节的内容
比如 P780 里的核对表中对类的要求，实际上我觉得几乎整本书的关于类的都是这样要求的）
还有讨论到为什么要用 JS 而不用其他，也让我想起
P845 - P847 34.6 「基于问题领域编程」以及其中的图 34 - 1
P851 - P853 34.9 「汝当分离软件与信仰」里头有个「工具箱」的比喻，我觉得纠结编程语言信仰的人或许可以看看

8:55 - 9:30
「我可以用，但是就让看程序的其他人变得难以理解了」
又跟昨天看到的很多内容一样，比如
P841 的 34.3 「首先为人写程序，其次才是为机器」
P848 的 34.7 「当心落石」
